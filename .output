Terminals unused in grammar

   KDEF


State 60 conflicts: 1 reduce/reduce
State 64 conflicts: 20 reduce/reduce
State 92 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: programname SEMICOLON $@1 programbody KEND IDENT

    3 programbody: declarations functions compound

    4 @2: %empty

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    6 declaration: KVAR identifier_list COLON type SEMICOLON
    7            | KVAR identifier_list COLON literal_constant SEMICOLON

    8 statement: compound
    9          | simple
   10          | conditional
   11          | while
   12          | for
   13          | return
   14          | procedure_call

   15 functions: %empty
   16          | function functions

   17 declarations: %empty
   18             | declaration declarations

   19 statements: %empty
   20           | statement statements

   21 $@3: %empty

   22 compound: KBEGIN $@3 declarations statements KEND

   23 simple: variable_reference ASSIGN expression SEMICOLON
   24       | KREAD variable_reference SEMICOLON

   25 $@4: %empty

   26 $@5: %empty

   27 simple: KPRINT $@4 variable_reference $@5 SEMICOLON

   28 $@6: %empty

   29 simple: KPRINT $@6 expression SEMICOLON

   30 $@7: %empty

   31 conditional: KIF expression KTHEN $@7 else_block

   32 else_block: statements KEND KIF

   33 @8: %empty

   34 else_block: statements KELSE @8 statements KEND KIF

   35 @9: %empty

   36 $@10: %empty

   37 while: KWHILE @9 expression KDO $@10 statements KEND KDO

   38 $@11: %empty

   39 @12: %empty

   40 $@13: %empty

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements KEND KDO

   42 return: KRET expression SEMICOLON

   43 procedure_call: function_invocation SEMICOLON

   44 function_invocation: IDENT LPAREN expressions RPAREN

   45 variable_reference: IDENT
   46                   | array_reference

   47 array_reference: IDENT index_references

   48 index_references: %empty
   49                 | LSBRACKET expression RSBRACKET index_references

   50 programname: IDENT

   51 identifier_list: IDENT

   52 $@14: %empty

   53 identifier_list: IDENT $@14 COMMA identifier_list

   54 scalar_type: KINTEGER
   55            | KREAL
   56            | KSTRING
   57            | KBOOL

   58 type: scalar_type
   59     | KARRAY integer_literal KTO integer_literal KOF type

   60 integer_literal: PINT
   61                | ZERO

   62 literal_constant: integer_literal
   63                 | REAL
   64                 | STRING
   65                 | KTRUE
   66                 | KFALSE

   67 expressions: %empty
   68            | expression
   69            | expression COMMA expressions

   70 arguments: %empty
   71          | argument
   72          | argument SEMICOLON arguments

   73 argument: identifier_list COLON type

   74 return_type: %empty
   75            | COLON type

   76 expression_component: literal_constant
   77                     | variable_reference
   78                     | function_invocation

   79 expression: expression_component
   80           | boolean_expression
   81           | expression PLUS expression
   82           | expression MINUS expression
   83           | expression MULTIP expression
   84           | expression DIVIDE expression
   85           | expression MOD expression
   86           | MINUS expression
   87           | LPAREN expression RPAREN

   88 boolean_expression: expression LESS expression
   89                   | expression LESSEQ expression
   90                   | expression NOTEQ expression
   91                   | expression GREQ expression
   92                   | expression GREATER expression
   93                   | expression EQ expression
   94                   | expression OR expression
   95                   | expression AND expression
   96                   | NOT expression


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 2 5 6 7 23 24 27 29 42 43 72
COLON (259) 6 7 73 75
COMMA (260) 53 69
RPAREN (261) 5 44 87
LPAREN (262) 5 44 87
LSBRACKET (263) 49
RSBRACKET (264) 49
KVAR (265) 6 7
KBEGIN (266) 5 22
KDEF (267)
KDO (268) 37 41
KELSE (269) 34
KEND (270) 2 5 22 32 34 37 41
KTO (271) 41 59
KOF (272) 59
KFOR (273) 41
KIF (274) 31 32 34
KPRINT (275) 27 29
KREAD (276) 24
KTHEN (277) 31
KRET (278) 42
KWHILE (279) 37
PLUS (280) 81
MINUS (281) 82 86
MULTIP (282) 83
DIVIDE (283) 84
MOD (284) 85
ASSIGN (285) 23 41
LESS (286) 88
LESSEQ (287) 89
NOTEQ (288) 90
GREQ (289) 91
GREATER (290) 92
EQ (291) 93
AND (292) 95
OR (293) 94
NOT (294) 96
IDENT (295) 2 5 41 44 45 47 50 51 53
KINTEGER (296) 54
KREAL (297) 55
KSTRING (298) 56
KBOOL (299) 57
KARRAY (300) 59
PINT (301) 60
ZERO (302) 61
REAL (303) 63
STRING (304) 64
KTRUE (305) 65
KFALSE (306) 66


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 2, on right: 0
$@1 (54)
    on left: 1, on right: 2
programbody (55)
    on left: 3, on right: 2
function (56)
    on left: 5, on right: 16
@2 (57)
    on left: 4, on right: 5
declaration (58)
    on left: 6 7, on right: 18
statement (59)
    on left: 8 9 10 11 12 13 14, on right: 20
functions (60)
    on left: 15 16, on right: 3 16
declarations (61)
    on left: 17 18, on right: 3 5 18 22
statements (62)
    on left: 19 20, on right: 5 20 22 32 34 37 41
compound (63)
    on left: 22, on right: 3 8
$@3 (64)
    on left: 21, on right: 22
simple (65)
    on left: 23 24 27 29, on right: 9
$@4 (66)
    on left: 25, on right: 27
$@5 (67)
    on left: 26, on right: 27
$@6 (68)
    on left: 28, on right: 29
conditional (69)
    on left: 31, on right: 10
$@7 (70)
    on left: 30, on right: 31
else_block (71)
    on left: 32 34, on right: 31
@8 (72)
    on left: 33, on right: 34
while (73)
    on left: 37, on right: 11
@9 (74)
    on left: 35, on right: 37
$@10 (75)
    on left: 36, on right: 37
for (76)
    on left: 41, on right: 12
$@11 (77)
    on left: 38, on right: 41
@12 (78)
    on left: 39, on right: 41
$@13 (79)
    on left: 40, on right: 41
return (80)
    on left: 42, on right: 13
procedure_call (81)
    on left: 43, on right: 14
function_invocation (82)
    on left: 44, on right: 43 78
variable_reference (83)
    on left: 45 46, on right: 23 24 27 77
array_reference (84)
    on left: 47, on right: 46
index_references (85)
    on left: 48 49, on right: 47 49
programname (86)
    on left: 50, on right: 2
identifier_list (87)
    on left: 51 53, on right: 6 7 53 73
$@14 (88)
    on left: 52, on right: 53
scalar_type (89)
    on left: 54 55 56 57, on right: 58
type (90)
    on left: 58 59, on right: 6 59 73 75
integer_literal (91)
    on left: 60 61, on right: 41 59 62
literal_constant (92)
    on left: 62 63 64 65 66, on right: 7 76
expressions (93)
    on left: 67 68 69, on right: 44 69
arguments (94)
    on left: 70 71 72, on right: 5 72
argument (95)
    on left: 73, on right: 71 72
return_type (96)
    on left: 74 75, on right: 5
expression_component (97)
    on left: 76 77 78, on right: 79
expression (98)
    on left: 79 80 81 82 83 84 85 86 87, on right: 23 29 31 37 42 49
    68 69 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
boolean_expression (99)
    on left: 88 89 90 91 92 93 94 95 96, on right: 80


State 0

    0 $accept: . program $end

    IDENT  shift, and go to state 1

    program      go to state 2
    programname  go to state 3


State 1

   50 programname: IDENT .

    $default  reduce using rule 50 (programname)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: programname . SEMICOLON $@1 programbody KEND IDENT

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: programname SEMICOLON . $@1 programbody KEND IDENT

    $default  reduce using rule 1 ($@1)

    $@1  go to state 6


State 6

    2 program: programname SEMICOLON $@1 . programbody KEND IDENT

    KVAR  shift, and go to state 7

    $default  reduce using rule 17 (declarations)

    programbody   go to state 8
    declaration   go to state 9
    declarations  go to state 10


State 7

    6 declaration: KVAR . identifier_list COLON type SEMICOLON
    7            | KVAR . identifier_list COLON literal_constant SEMICOLON

    IDENT  shift, and go to state 11

    identifier_list  go to state 12


State 8

    2 program: programname SEMICOLON $@1 programbody . KEND IDENT

    KEND  shift, and go to state 13


State 9

   18 declarations: declaration . declarations

    KVAR  shift, and go to state 7

    $default  reduce using rule 17 (declarations)

    declaration   go to state 9
    declarations  go to state 14


State 10

    3 programbody: declarations . functions compound

    IDENT  shift, and go to state 15

    $default  reduce using rule 15 (functions)

    function   go to state 16
    functions  go to state 17


State 11

   51 identifier_list: IDENT .
   53                | IDENT . $@14 COMMA identifier_list

    COMMA     reduce using rule 52 ($@14)
    $default  reduce using rule 51 (identifier_list)

    $@14  go to state 18


State 12

    6 declaration: KVAR identifier_list . COLON type SEMICOLON
    7            | KVAR identifier_list . COLON literal_constant SEMICOLON

    COLON  shift, and go to state 19


State 13

    2 program: programname SEMICOLON $@1 programbody KEND . IDENT

    IDENT  shift, and go to state 20


State 14

   18 declarations: declaration declarations .

    $default  reduce using rule 18 (declarations)


State 15

    5 function: IDENT . LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    LPAREN  shift, and go to state 21


State 16

   16 functions: function . functions

    IDENT  shift, and go to state 15

    $default  reduce using rule 15 (functions)

    function   go to state 16
    functions  go to state 22


State 17

    3 programbody: declarations functions . compound

    KBEGIN  shift, and go to state 23

    compound  go to state 24


State 18

   53 identifier_list: IDENT $@14 . COMMA identifier_list

    COMMA  shift, and go to state 25


State 19

    6 declaration: KVAR identifier_list COLON . type SEMICOLON
    7            | KVAR identifier_list COLON . literal_constant SEMICOLON

    KINTEGER  shift, and go to state 26
    KREAL     shift, and go to state 27
    KSTRING   shift, and go to state 28
    KBOOL     shift, and go to state 29
    KARRAY    shift, and go to state 30
    PINT      shift, and go to state 31
    ZERO      shift, and go to state 32
    REAL      shift, and go to state 33
    STRING    shift, and go to state 34
    KTRUE     shift, and go to state 35
    KFALSE    shift, and go to state 36

    scalar_type       go to state 37
    type              go to state 38
    integer_literal   go to state 39
    literal_constant  go to state 40


State 20

    2 program: programname SEMICOLON $@1 programbody KEND IDENT .

    $default  reduce using rule 2 (program)


State 21

    5 function: IDENT LPAREN . arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    IDENT  shift, and go to state 11

    $default  reduce using rule 70 (arguments)

    identifier_list  go to state 41
    arguments        go to state 42
    argument         go to state 43


State 22

   16 functions: function functions .

    $default  reduce using rule 16 (functions)


State 23

   22 compound: KBEGIN . $@3 declarations statements KEND

    $default  reduce using rule 21 ($@3)

    $@3  go to state 44


State 24

    3 programbody: declarations functions compound .

    $default  reduce using rule 3 (programbody)


State 25

   53 identifier_list: IDENT $@14 COMMA . identifier_list

    IDENT  shift, and go to state 11

    identifier_list  go to state 45


State 26

   54 scalar_type: KINTEGER .

    $default  reduce using rule 54 (scalar_type)


State 27

   55 scalar_type: KREAL .

    $default  reduce using rule 55 (scalar_type)


State 28

   56 scalar_type: KSTRING .

    $default  reduce using rule 56 (scalar_type)


State 29

   57 scalar_type: KBOOL .

    $default  reduce using rule 57 (scalar_type)


State 30

   59 type: KARRAY . integer_literal KTO integer_literal KOF type

    PINT  shift, and go to state 31
    ZERO  shift, and go to state 32

    integer_literal  go to state 46


State 31

   60 integer_literal: PINT .

    $default  reduce using rule 60 (integer_literal)


State 32

   61 integer_literal: ZERO .

    $default  reduce using rule 61 (integer_literal)


State 33

   63 literal_constant: REAL .

    $default  reduce using rule 63 (literal_constant)


State 34

   64 literal_constant: STRING .

    $default  reduce using rule 64 (literal_constant)


State 35

   65 literal_constant: KTRUE .

    $default  reduce using rule 65 (literal_constant)


State 36

   66 literal_constant: KFALSE .

    $default  reduce using rule 66 (literal_constant)


State 37

   58 type: scalar_type .

    $default  reduce using rule 58 (type)


State 38

    6 declaration: KVAR identifier_list COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 39

   62 literal_constant: integer_literal .

    $default  reduce using rule 62 (literal_constant)


State 40

    7 declaration: KVAR identifier_list COLON literal_constant . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 41

   73 argument: identifier_list . COLON type

    COLON  shift, and go to state 49


State 42

    5 function: IDENT LPAREN arguments . RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    RPAREN  shift, and go to state 50


State 43

   71 arguments: argument .
   72          | argument . SEMICOLON arguments

    SEMICOLON  shift, and go to state 51

    $default  reduce using rule 71 (arguments)


State 44

   22 compound: KBEGIN $@3 . declarations statements KEND

    KVAR  shift, and go to state 7

    $default  reduce using rule 17 (declarations)

    declaration   go to state 9
    declarations  go to state 52


State 45

   53 identifier_list: IDENT $@14 COMMA identifier_list .

    $default  reduce using rule 53 (identifier_list)


State 46

   59 type: KARRAY integer_literal . KTO integer_literal KOF type

    KTO  shift, and go to state 53


State 47

    6 declaration: KVAR identifier_list COLON type SEMICOLON .

    $default  reduce using rule 6 (declaration)


State 48

    7 declaration: KVAR identifier_list COLON literal_constant SEMICOLON .

    $default  reduce using rule 7 (declaration)


State 49

   73 argument: identifier_list COLON . type

    KINTEGER  shift, and go to state 26
    KREAL     shift, and go to state 27
    KSTRING   shift, and go to state 28
    KBOOL     shift, and go to state 29
    KARRAY    shift, and go to state 30

    scalar_type  go to state 37
    type         go to state 54


State 50

    5 function: IDENT LPAREN arguments RPAREN . return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    COLON  shift, and go to state 55

    $default  reduce using rule 74 (return_type)

    return_type  go to state 56


State 51

   72 arguments: argument SEMICOLON . arguments

    IDENT  shift, and go to state 11

    $default  reduce using rule 70 (arguments)

    identifier_list  go to state 41
    arguments        go to state 57
    argument         go to state 43


State 52

   22 compound: KBEGIN $@3 declarations . statements KEND

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 66
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 53

   59 type: KARRAY integer_literal KTO . integer_literal KOF type

    PINT  shift, and go to state 31
    ZERO  shift, and go to state 32

    integer_literal  go to state 77


State 54

   73 argument: identifier_list COLON type .

    $default  reduce using rule 73 (argument)


State 55

   75 return_type: COLON . type

    KINTEGER  shift, and go to state 26
    KREAL     shift, and go to state 27
    KSTRING   shift, and go to state 28
    KBOOL     shift, and go to state 29
    KARRAY    shift, and go to state 30

    scalar_type  go to state 37
    type         go to state 78


State 56

    5 function: IDENT LPAREN arguments RPAREN return_type . @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    $default  reduce using rule 4 (@2)

    @2  go to state 79


State 57

   72 arguments: argument SEMICOLON arguments .

    $default  reduce using rule 72 (arguments)


State 58

   41 for: KFOR . IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements KEND KDO

    IDENT  shift, and go to state 80


State 59

   31 conditional: KIF . expression KTHEN $@7 else_block

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 88
    boolean_expression    go to state 89


State 60

   27 simple: KPRINT . $@4 variable_reference $@5 SEMICOLON
   29       | KPRINT . $@6 expression SEMICOLON

    IDENT     reduce using rule 25 ($@4)
    IDENT     [reduce using rule 28 ($@6)]
    $default  reduce using rule 28 ($@6)

    $@4  go to state 90
    $@6  go to state 91


State 61

   24 simple: KREAD . variable_reference SEMICOLON

    IDENT  shift, and go to state 92

    variable_reference  go to state 93
    array_reference     go to state 76


State 62

   42 return: KRET . expression SEMICOLON

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 94
    boolean_expression    go to state 89


State 63

   37 while: KWHILE . @9 expression KDO $@10 statements KEND KDO

    $default  reduce using rule 35 (@9)

    @9  go to state 95


State 64

   44 function_invocation: IDENT . LPAREN expressions RPAREN
   45 variable_reference: IDENT .
   47 array_reference: IDENT . index_references

    LPAREN     shift, and go to state 96
    LSBRACKET  shift, and go to state 97

    SEMICOLON  reduce using rule 45 (variable_reference)
    SEMICOLON  [reduce using rule 48 (index_references)]
    COMMA      reduce using rule 45 (variable_reference)
    COMMA      [reduce using rule 48 (index_references)]
    RPAREN     reduce using rule 45 (variable_reference)
    RPAREN     [reduce using rule 48 (index_references)]
    RSBRACKET  reduce using rule 45 (variable_reference)
    RSBRACKET  [reduce using rule 48 (index_references)]
    KDO        reduce using rule 45 (variable_reference)
    KDO        [reduce using rule 48 (index_references)]
    KTHEN      reduce using rule 45 (variable_reference)
    KTHEN      [reduce using rule 48 (index_references)]
    PLUS       reduce using rule 45 (variable_reference)
    PLUS       [reduce using rule 48 (index_references)]
    MINUS      reduce using rule 45 (variable_reference)
    MINUS      [reduce using rule 48 (index_references)]
    MULTIP     reduce using rule 45 (variable_reference)
    MULTIP     [reduce using rule 48 (index_references)]
    DIVIDE     reduce using rule 45 (variable_reference)
    DIVIDE     [reduce using rule 48 (index_references)]
    MOD        reduce using rule 45 (variable_reference)
    MOD        [reduce using rule 48 (index_references)]
    ASSIGN     reduce using rule 45 (variable_reference)
    ASSIGN     [reduce using rule 48 (index_references)]
    LESS       reduce using rule 45 (variable_reference)
    LESS       [reduce using rule 48 (index_references)]
    LESSEQ     reduce using rule 45 (variable_reference)
    LESSEQ     [reduce using rule 48 (index_references)]
    NOTEQ      reduce using rule 45 (variable_reference)
    NOTEQ      [reduce using rule 48 (index_references)]
    GREQ       reduce using rule 45 (variable_reference)
    GREQ       [reduce using rule 48 (index_references)]
    GREATER    reduce using rule 45 (variable_reference)
    GREATER    [reduce using rule 48 (index_references)]
    EQ         reduce using rule 45 (variable_reference)
    EQ         [reduce using rule 48 (index_references)]
    AND        reduce using rule 45 (variable_reference)
    AND        [reduce using rule 48 (index_references)]
    OR         reduce using rule 45 (variable_reference)
    OR         [reduce using rule 48 (index_references)]
    $default   reduce using rule 45 (variable_reference)

    index_references  go to state 98


State 65

   20 statements: statement . statements

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 99
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 66

   22 compound: KBEGIN $@3 declarations statements . KEND

    KEND  shift, and go to state 100


State 67

    8 statement: compound .

    $default  reduce using rule 8 (statement)


State 68

    9 statement: simple .

    $default  reduce using rule 9 (statement)


State 69

   10 statement: conditional .

    $default  reduce using rule 10 (statement)


State 70

   11 statement: while .

    $default  reduce using rule 11 (statement)


State 71

   12 statement: for .

    $default  reduce using rule 12 (statement)


State 72

   13 statement: return .

    $default  reduce using rule 13 (statement)


State 73

   14 statement: procedure_call .

    $default  reduce using rule 14 (statement)


State 74

   43 procedure_call: function_invocation . SEMICOLON

    SEMICOLON  shift, and go to state 101


State 75

   23 simple: variable_reference . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 102


State 76

   46 variable_reference: array_reference .

    $default  reduce using rule 46 (variable_reference)


State 77

   59 type: KARRAY integer_literal KTO integer_literal . KOF type

    KOF  shift, and go to state 103


State 78

   75 return_type: COLON type .

    $default  reduce using rule 75 (return_type)


State 79

    5 function: IDENT LPAREN arguments RPAREN return_type @2 . SEMICOLON KBEGIN declarations statements KEND KEND IDENT

    SEMICOLON  shift, and go to state 104


State 80

   41 for: KFOR IDENT . $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements KEND KDO

    $default  reduce using rule 38 ($@11)

    $@11  go to state 105


State 81

   87 expression: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 106
    boolean_expression    go to state 89


State 82

   86 expression: MINUS . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 107
    boolean_expression    go to state 89


State 83

   96 boolean_expression: NOT . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 108
    boolean_expression    go to state 89


State 84

   78 expression_component: function_invocation .

    $default  reduce using rule 78 (expression_component)


State 85

   77 expression_component: variable_reference .

    $default  reduce using rule 77 (expression_component)


State 86

   76 expression_component: literal_constant .

    $default  reduce using rule 76 (expression_component)


State 87

   79 expression: expression_component .

    $default  reduce using rule 79 (expression)


State 88

   31 conditional: KIF expression . KTHEN $@7 else_block
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    KTHEN    shift, and go to state 109
    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120
    AND      shift, and go to state 121
    OR       shift, and go to state 122


State 89

   80 expression: boolean_expression .

    $default  reduce using rule 80 (expression)


State 90

   27 simple: KPRINT $@4 . variable_reference $@5 SEMICOLON

    IDENT  shift, and go to state 92

    variable_reference  go to state 123
    array_reference     go to state 76


State 91

   29 simple: KPRINT $@6 . expression SEMICOLON

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 124
    boolean_expression    go to state 89


State 92

   45 variable_reference: IDENT .
   47 array_reference: IDENT . index_references

    LSBRACKET  shift, and go to state 97

    SEMICOLON  reduce using rule 45 (variable_reference)
    SEMICOLON  [reduce using rule 48 (index_references)]
    $default   reduce using rule 45 (variable_reference)

    index_references  go to state 98


State 93

   24 simple: KREAD variable_reference . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 94

   42 return: KRET expression . SEMICOLON
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    SEMICOLON  shift, and go to state 126
    PLUS       shift, and go to state 110
    MINUS      shift, and go to state 111
    MULTIP     shift, and go to state 112
    DIVIDE     shift, and go to state 113
    MOD        shift, and go to state 114
    LESS       shift, and go to state 115
    LESSEQ     shift, and go to state 116
    NOTEQ      shift, and go to state 117
    GREQ       shift, and go to state 118
    GREATER    shift, and go to state 119
    EQ         shift, and go to state 120
    AND        shift, and go to state 121
    OR         shift, and go to state 122


State 95

   37 while: KWHILE @9 . expression KDO $@10 statements KEND KDO

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 127
    boolean_expression    go to state 89


State 96

   44 function_invocation: IDENT LPAREN . expressions RPAREN

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    $default  reduce using rule 67 (expressions)

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expressions           go to state 128
    expression_component  go to state 87
    expression            go to state 129
    boolean_expression    go to state 89


State 97

   49 index_references: LSBRACKET . expression RSBRACKET index_references

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 130
    boolean_expression    go to state 89


State 98

   47 array_reference: IDENT index_references .

    $default  reduce using rule 47 (array_reference)


State 99

   20 statements: statement statements .

    $default  reduce using rule 20 (statements)


State 100

   22 compound: KBEGIN $@3 declarations statements KEND .

    $default  reduce using rule 22 (compound)


State 101

   43 procedure_call: function_invocation SEMICOLON .

    $default  reduce using rule 43 (procedure_call)


State 102

   23 simple: variable_reference ASSIGN . expression SEMICOLON

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 131
    boolean_expression    go to state 89


State 103

   59 type: KARRAY integer_literal KTO integer_literal KOF . type

    KINTEGER  shift, and go to state 26
    KREAL     shift, and go to state 27
    KSTRING   shift, and go to state 28
    KBOOL     shift, and go to state 29
    KARRAY    shift, and go to state 30

    scalar_type  go to state 37
    type         go to state 132


State 104

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON . KBEGIN declarations statements KEND KEND IDENT

    KBEGIN  shift, and go to state 133


State 105

   41 for: KFOR IDENT $@11 . ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements KEND KDO

    ASSIGN  shift, and go to state 134


State 106

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   87           | LPAREN expression . RPAREN
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    RPAREN   shift, and go to state 135
    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120
    AND      shift, and go to state 121
    OR       shift, and go to state 122


State 107

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   86           | MINUS expression .
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    $default  reduce using rule 86 (expression)


State 108

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression
   96                   | NOT expression .

    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120

    $default  reduce using rule 96 (boolean_expression)


State 109

   31 conditional: KIF expression KTHEN . $@7 else_block

    $default  reduce using rule 30 ($@7)

    $@7  go to state 136


State 110

   81 expression: expression PLUS . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 137
    boolean_expression    go to state 89


State 111

   82 expression: expression MINUS . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 138
    boolean_expression    go to state 89


State 112

   83 expression: expression MULTIP . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 139
    boolean_expression    go to state 89


State 113

   84 expression: expression DIVIDE . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 140
    boolean_expression    go to state 89


State 114

   85 expression: expression MOD . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 141
    boolean_expression    go to state 89


State 115

   88 boolean_expression: expression LESS . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 142
    boolean_expression    go to state 89


State 116

   89 boolean_expression: expression LESSEQ . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 143
    boolean_expression    go to state 89


State 117

   90 boolean_expression: expression NOTEQ . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 144
    boolean_expression    go to state 89


State 118

   91 boolean_expression: expression GREQ . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 145
    boolean_expression    go to state 89


State 119

   92 boolean_expression: expression GREATER . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 146
    boolean_expression    go to state 89


State 120

   93 boolean_expression: expression EQ . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 147
    boolean_expression    go to state 89


State 121

   95 boolean_expression: expression AND . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 148
    boolean_expression    go to state 89


State 122

   94 boolean_expression: expression OR . expression

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expression_component  go to state 87
    expression            go to state 149
    boolean_expression    go to state 89


State 123

   27 simple: KPRINT $@4 variable_reference . $@5 SEMICOLON

    $default  reduce using rule 26 ($@5)

    $@5  go to state 150


State 124

   29 simple: KPRINT $@6 expression . SEMICOLON
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    SEMICOLON  shift, and go to state 151
    PLUS       shift, and go to state 110
    MINUS      shift, and go to state 111
    MULTIP     shift, and go to state 112
    DIVIDE     shift, and go to state 113
    MOD        shift, and go to state 114
    LESS       shift, and go to state 115
    LESSEQ     shift, and go to state 116
    NOTEQ      shift, and go to state 117
    GREQ       shift, and go to state 118
    GREATER    shift, and go to state 119
    EQ         shift, and go to state 120
    AND        shift, and go to state 121
    OR         shift, and go to state 122


State 125

   24 simple: KREAD variable_reference SEMICOLON .

    $default  reduce using rule 24 (simple)


State 126

   42 return: KRET expression SEMICOLON .

    $default  reduce using rule 42 (return)


State 127

   37 while: KWHILE @9 expression . KDO $@10 statements KEND KDO
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    KDO      shift, and go to state 152
    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120
    AND      shift, and go to state 121
    OR       shift, and go to state 122


State 128

   44 function_invocation: IDENT LPAREN expressions . RPAREN

    RPAREN  shift, and go to state 153


State 129

   68 expressions: expression .
   69            | expression . COMMA expressions
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    COMMA    shift, and go to state 154
    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120
    AND      shift, and go to state 121
    OR       shift, and go to state 122

    $default  reduce using rule 68 (expressions)


State 130

   49 index_references: LSBRACKET expression . RSBRACKET index_references
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    RSBRACKET  shift, and go to state 155
    PLUS       shift, and go to state 110
    MINUS      shift, and go to state 111
    MULTIP     shift, and go to state 112
    DIVIDE     shift, and go to state 113
    MOD        shift, and go to state 114
    LESS       shift, and go to state 115
    LESSEQ     shift, and go to state 116
    NOTEQ      shift, and go to state 117
    GREQ       shift, and go to state 118
    GREATER    shift, and go to state 119
    EQ         shift, and go to state 120
    AND        shift, and go to state 121
    OR         shift, and go to state 122


State 131

   23 simple: variable_reference ASSIGN expression . SEMICOLON
   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    SEMICOLON  shift, and go to state 156
    PLUS       shift, and go to state 110
    MINUS      shift, and go to state 111
    MULTIP     shift, and go to state 112
    DIVIDE     shift, and go to state 113
    MOD        shift, and go to state 114
    LESS       shift, and go to state 115
    LESSEQ     shift, and go to state 116
    NOTEQ      shift, and go to state 117
    GREQ       shift, and go to state 118
    GREATER    shift, and go to state 119
    EQ         shift, and go to state 120
    AND        shift, and go to state 121
    OR         shift, and go to state 122


State 132

   59 type: KARRAY integer_literal KTO integer_literal KOF type .

    $default  reduce using rule 59 (type)


State 133

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN . declarations statements KEND KEND IDENT

    KVAR  shift, and go to state 7

    $default  reduce using rule 17 (declarations)

    declaration   go to state 9
    declarations  go to state 157


State 134

   41 for: KFOR IDENT $@11 ASSIGN . integer_literal @12 KTO integer_literal $@13 KDO statements KEND KDO

    PINT  shift, and go to state 31
    ZERO  shift, and go to state 32

    integer_literal  go to state 158


State 135

   87 expression: LPAREN expression RPAREN .

    $default  reduce using rule 87 (expression)


State 136

   31 conditional: KIF expression KTHEN $@7 . else_block

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 159
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    else_block           go to state 160
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 137

   81 expression: expression . PLUS expression
   81           | expression PLUS expression .
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    $default  reduce using rule 81 (expression)


State 138

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   82           | expression MINUS expression .
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    $default  reduce using rule 82 (expression)


State 139

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   83           | expression MULTIP expression .
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    $default  reduce using rule 83 (expression)


State 140

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   84           | expression DIVIDE expression .
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    $default  reduce using rule 84 (expression)


State 141

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   85           | expression MOD expression .
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    $default  reduce using rule 85 (expression)


State 142

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   88                   | expression LESS expression .
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    LESS     error (nonassociative)
    LESSEQ   error (nonassociative)
    NOTEQ    error (nonassociative)
    GREQ     error (nonassociative)
    GREATER  error (nonassociative)
    EQ       error (nonassociative)

    $default  reduce using rule 88 (boolean_expression)


State 143

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   89                   | expression LESSEQ expression .
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    LESS     error (nonassociative)
    LESSEQ   error (nonassociative)
    NOTEQ    error (nonassociative)
    GREQ     error (nonassociative)
    GREATER  error (nonassociative)
    EQ       error (nonassociative)

    $default  reduce using rule 89 (boolean_expression)


State 144

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   90                   | expression NOTEQ expression .
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    LESS     error (nonassociative)
    LESSEQ   error (nonassociative)
    NOTEQ    error (nonassociative)
    GREQ     error (nonassociative)
    GREATER  error (nonassociative)
    EQ       error (nonassociative)

    $default  reduce using rule 90 (boolean_expression)


State 145

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   91                   | expression GREQ expression .
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    LESS     error (nonassociative)
    LESSEQ   error (nonassociative)
    NOTEQ    error (nonassociative)
    GREQ     error (nonassociative)
    GREATER  error (nonassociative)
    EQ       error (nonassociative)

    $default  reduce using rule 91 (boolean_expression)


State 146

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   92                   | expression GREATER expression .
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    LESS     error (nonassociative)
    LESSEQ   error (nonassociative)
    NOTEQ    error (nonassociative)
    GREQ     error (nonassociative)
    GREATER  error (nonassociative)
    EQ       error (nonassociative)

    $default  reduce using rule 92 (boolean_expression)


State 147

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   93                   | expression EQ expression .
   94                   | expression . OR expression
   95                   | expression . AND expression

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    MULTIP  shift, and go to state 112
    DIVIDE  shift, and go to state 113
    MOD     shift, and go to state 114

    LESS     error (nonassociative)
    LESSEQ   error (nonassociative)
    NOTEQ    error (nonassociative)
    GREQ     error (nonassociative)
    GREATER  error (nonassociative)
    EQ       error (nonassociative)

    $default  reduce using rule 93 (boolean_expression)


State 148

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   95                   | expression . AND expression
   95                   | expression AND expression .

    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120

    $default  reduce using rule 95 (boolean_expression)


State 149

   81 expression: expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . MULTIP expression
   84           | expression . DIVIDE expression
   85           | expression . MOD expression
   88 boolean_expression: expression . LESS expression
   89                   | expression . LESSEQ expression
   90                   | expression . NOTEQ expression
   91                   | expression . GREQ expression
   92                   | expression . GREATER expression
   93                   | expression . EQ expression
   94                   | expression . OR expression
   94                   | expression OR expression .
   95                   | expression . AND expression

    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    MULTIP   shift, and go to state 112
    DIVIDE   shift, and go to state 113
    MOD      shift, and go to state 114
    LESS     shift, and go to state 115
    LESSEQ   shift, and go to state 116
    NOTEQ    shift, and go to state 117
    GREQ     shift, and go to state 118
    GREATER  shift, and go to state 119
    EQ       shift, and go to state 120

    $default  reduce using rule 94 (boolean_expression)


State 150

   27 simple: KPRINT $@4 variable_reference $@5 . SEMICOLON

    SEMICOLON  shift, and go to state 161


State 151

   29 simple: KPRINT $@6 expression SEMICOLON .

    $default  reduce using rule 29 (simple)


State 152

   37 while: KWHILE @9 expression KDO . $@10 statements KEND KDO

    $default  reduce using rule 36 ($@10)

    $@10  go to state 162


State 153

   44 function_invocation: IDENT LPAREN expressions RPAREN .

    $default  reduce using rule 44 (function_invocation)


State 154

   69 expressions: expression COMMA . expressions

    LPAREN  shift, and go to state 81
    MINUS   shift, and go to state 82
    NOT     shift, and go to state 83
    IDENT   shift, and go to state 64
    PINT    shift, and go to state 31
    ZERO    shift, and go to state 32
    REAL    shift, and go to state 33
    STRING  shift, and go to state 34
    KTRUE   shift, and go to state 35
    KFALSE  shift, and go to state 36

    $default  reduce using rule 67 (expressions)

    function_invocation   go to state 84
    variable_reference    go to state 85
    array_reference       go to state 76
    integer_literal       go to state 39
    literal_constant      go to state 86
    expressions           go to state 163
    expression_component  go to state 87
    expression            go to state 129
    boolean_expression    go to state 89


State 155

   49 index_references: LSBRACKET expression RSBRACKET . index_references

    LSBRACKET  shift, and go to state 97

    $default  reduce using rule 48 (index_references)

    index_references  go to state 164


State 156

   23 simple: variable_reference ASSIGN expression SEMICOLON .

    $default  reduce using rule 23 (simple)


State 157

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations . statements KEND KEND IDENT

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 165
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 158

   41 for: KFOR IDENT $@11 ASSIGN integer_literal . @12 KTO integer_literal $@13 KDO statements KEND KDO

    $default  reduce using rule 39 (@12)

    @12  go to state 166


State 159

   32 else_block: statements . KEND KIF
   34           | statements . KELSE @8 statements KEND KIF

    KELSE  shift, and go to state 167
    KEND   shift, and go to state 168


State 160

   31 conditional: KIF expression KTHEN $@7 else_block .

    $default  reduce using rule 31 (conditional)


State 161

   27 simple: KPRINT $@4 variable_reference $@5 SEMICOLON .

    $default  reduce using rule 27 (simple)


State 162

   37 while: KWHILE @9 expression KDO $@10 . statements KEND KDO

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 169
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 163

   69 expressions: expression COMMA expressions .

    $default  reduce using rule 69 (expressions)


State 164

   49 index_references: LSBRACKET expression RSBRACKET index_references .

    $default  reduce using rule 49 (index_references)


State 165

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements . KEND KEND IDENT

    KEND  shift, and go to state 170


State 166

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 . KTO integer_literal $@13 KDO statements KEND KDO

    KTO  shift, and go to state 171


State 167

   34 else_block: statements KELSE . @8 statements KEND KIF

    $default  reduce using rule 33 (@8)

    @8  go to state 172


State 168

   32 else_block: statements KEND . KIF

    KIF  shift, and go to state 173


State 169

   37 while: KWHILE @9 expression KDO $@10 statements . KEND KDO

    KEND  shift, and go to state 174


State 170

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND . KEND IDENT

    KEND  shift, and go to state 175


State 171

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO . integer_literal $@13 KDO statements KEND KDO

    PINT  shift, and go to state 31
    ZERO  shift, and go to state 32

    integer_literal  go to state 176


State 172

   34 else_block: statements KELSE @8 . statements KEND KIF

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 177
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 173

   32 else_block: statements KEND KIF .

    $default  reduce using rule 32 (else_block)


State 174

   37 while: KWHILE @9 expression KDO $@10 statements KEND . KDO

    KDO  shift, and go to state 178


State 175

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND . IDENT

    IDENT  shift, and go to state 179


State 176

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal . $@13 KDO statements KEND KDO

    $default  reduce using rule 40 ($@13)

    $@13  go to state 180


State 177

   34 else_block: statements KELSE @8 statements . KEND KIF

    KEND  shift, and go to state 181


State 178

   37 while: KWHILE @9 expression KDO $@10 statements KEND KDO .

    $default  reduce using rule 37 (while)


State 179

    5 function: IDENT LPAREN arguments RPAREN return_type @2 SEMICOLON KBEGIN declarations statements KEND KEND IDENT .

    $default  reduce using rule 5 (function)


State 180

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 . KDO statements KEND KDO

    KDO  shift, and go to state 182


State 181

   34 else_block: statements KELSE @8 statements KEND . KIF

    KIF  shift, and go to state 183


State 182

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO . statements KEND KDO

    KBEGIN  shift, and go to state 23
    KFOR    shift, and go to state 58
    KIF     shift, and go to state 59
    KPRINT  shift, and go to state 60
    KREAD   shift, and go to state 61
    KRET    shift, and go to state 62
    KWHILE  shift, and go to state 63
    IDENT   shift, and go to state 64

    $default  reduce using rule 19 (statements)

    statement            go to state 65
    statements           go to state 184
    compound             go to state 67
    simple               go to state 68
    conditional          go to state 69
    while                go to state 70
    for                  go to state 71
    return               go to state 72
    procedure_call       go to state 73
    function_invocation  go to state 74
    variable_reference   go to state 75
    array_reference      go to state 76


State 183

   34 else_block: statements KELSE @8 statements KEND KIF .

    $default  reduce using rule 34 (else_block)


State 184

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements . KEND KDO

    KEND  shift, and go to state 185


State 185

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements KEND . KDO

    KDO  shift, and go to state 186


State 186

   41 for: KFOR IDENT $@11 ASSIGN integer_literal @12 KTO integer_literal $@13 KDO statements KEND KDO .

    $default  reduce using rule 41 (for)
